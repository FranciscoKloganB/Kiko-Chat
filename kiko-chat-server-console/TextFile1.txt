System.Runtime.Remotng

reg(nick, url)
c = Activator.GetObject(URL)
Dictionary[nick]

Send (nick, msg) {
 while(e = dict.keys) {
	if(e.nick != nick)
		dict[e.nick].RecieveMulticast
 }
}

Cliente
Winforms:
	FormChat:
		- Caixa de texto para mostrar a conversa (tbConv)
		- Caixa de texto para escrever a mensagem
		- Botão para enviar
		- Botão de connect
		- Caixa de texto com nickname de utilizador (tbNick)
		- Caixa de texto para número do porto do cliente (tbPort)
	FormChat tem como atributos:
		- TcpChannel ch;
		- SC sc = new SC();
--
	class FormChat : Form {
		public void AdMsg(string msg) {
			tbConv.Text += m + "\n";
		}
	}
--	
	Quando se faz connect:
		ch = new TcpChannel(Int32.Parse(tbPort.Text));
		ChannelServices.RegisterChannel(ch, false);
		ISS ss = (ISS) Activator.GetObject(
			typeof(ISS),
			"tcp://localhost:8000/mcm");
		RemotingServices.Marshal(sc, "clientChat", typeof(SC));
		ss.Reg(tbNick.Text, "tcp://localhost:" + tbPort.Text + "/clientChat");
--
	class SC : ISC, MBR { FormChat fc;
		public void RecvBcast (string msg) {
			fc.Invoke(new DelAdMsg(fc.AdMsg), new object[] {msg});
			OU
			fc.Invoke(fc.AdMsg, msg);
		}
	}
--



Console implements "ISC"
	- RecvBcast()

Servidor
Console implments "ISS":
	- string Reg(string nick, )
	- Send(string nick, string msg)
	- 


Class Library
	- Interface ISS
	- Interface ISC
